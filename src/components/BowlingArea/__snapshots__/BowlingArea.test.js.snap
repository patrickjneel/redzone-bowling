// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`should match the snap shot 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <BowlingArea />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <div
          className="button-container"
        >
          <button
            className="score-btn"
            onClick={[Function]}
            value={0}
          >
            0
          </button>
          <button
            className="score-btn"
            onClick={[Function]}
            value={1}
          >
            1
          </button>
          <button
            className="score-btn"
            onClick={[Function]}
            value={2}
          >
            2
          </button>
          <button
            className="score-btn"
            onClick={[Function]}
            value={3}
          >
            3
          </button>
          <button
            className="score-btn"
            onClick={[Function]}
            value={4}
          >
            4
          </button>
          <button
            className="score-btn"
            onClick={[Function]}
            value={5}
          >
            5
          </button>
          <button
            className="score-btn"
            onClick={[Function]}
            value={6}
          >
            6
          </button>
          <button
            className="score-btn"
            onClick={[Function]}
            value={7}
          >
            7
          </button>
          <button
            className="score-btn"
            onClick={[Function]}
            value={8}
          >
            8
          </button>
          <button
            className="score-btn"
            onClick={[Function]}
            value={9}
          >
            9
          </button>
          <button
            className="score-btn"
            onClick={[Function]}
            value={10}
          >
            10
          </button>
        </div>,
        undefined,
        <ScoreBoard
          frameTotal={Array []}
          scoreArray={Array []}
        />,
      ],
      "className": "bowling-area",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <button
              className="score-btn"
              onClick={[Function]}
              value={0}
            >
              0
            </button>,
            <button
              className="score-btn"
              onClick={[Function]}
              value={1}
            >
              1
            </button>,
            <button
              className="score-btn"
              onClick={[Function]}
              value={2}
            >
              2
            </button>,
            <button
              className="score-btn"
              onClick={[Function]}
              value={3}
            >
              3
            </button>,
            <button
              className="score-btn"
              onClick={[Function]}
              value={4}
            >
              4
            </button>,
            <button
              className="score-btn"
              onClick={[Function]}
              value={5}
            >
              5
            </button>,
            <button
              className="score-btn"
              onClick={[Function]}
              value={6}
            >
              6
            </button>,
            <button
              className="score-btn"
              onClick={[Function]}
              value={7}
            >
              7
            </button>,
            <button
              className="score-btn"
              onClick={[Function]}
              value={8}
            >
              8
            </button>,
            <button
              className="score-btn"
              onClick={[Function]}
              value={9}
            >
              9
            </button>,
            <button
              className="score-btn"
              onClick={[Function]}
              value={10}
            >
              10
            </button>,
          ],
          "className": "button-container",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": "0",
            "nodeType": "host",
            "props": Object {
              "children": 0,
              "className": "score-btn",
              "onClick": [Function],
              "value": 0,
            },
            "ref": null,
            "rendered": 0,
            "type": "button",
          },
          Object {
            "instance": null,
            "key": "1",
            "nodeType": "host",
            "props": Object {
              "children": 1,
              "className": "score-btn",
              "onClick": [Function],
              "value": 1,
            },
            "ref": null,
            "rendered": 1,
            "type": "button",
          },
          Object {
            "instance": null,
            "key": "2",
            "nodeType": "host",
            "props": Object {
              "children": 2,
              "className": "score-btn",
              "onClick": [Function],
              "value": 2,
            },
            "ref": null,
            "rendered": 2,
            "type": "button",
          },
          Object {
            "instance": null,
            "key": "3",
            "nodeType": "host",
            "props": Object {
              "children": 3,
              "className": "score-btn",
              "onClick": [Function],
              "value": 3,
            },
            "ref": null,
            "rendered": 3,
            "type": "button",
          },
          Object {
            "instance": null,
            "key": "4",
            "nodeType": "host",
            "props": Object {
              "children": 4,
              "className": "score-btn",
              "onClick": [Function],
              "value": 4,
            },
            "ref": null,
            "rendered": 4,
            "type": "button",
          },
          Object {
            "instance": null,
            "key": "5",
            "nodeType": "host",
            "props": Object {
              "children": 5,
              "className": "score-btn",
              "onClick": [Function],
              "value": 5,
            },
            "ref": null,
            "rendered": 5,
            "type": "button",
          },
          Object {
            "instance": null,
            "key": "6",
            "nodeType": "host",
            "props": Object {
              "children": 6,
              "className": "score-btn",
              "onClick": [Function],
              "value": 6,
            },
            "ref": null,
            "rendered": 6,
            "type": "button",
          },
          Object {
            "instance": null,
            "key": "7",
            "nodeType": "host",
            "props": Object {
              "children": 7,
              "className": "score-btn",
              "onClick": [Function],
              "value": 7,
            },
            "ref": null,
            "rendered": 7,
            "type": "button",
          },
          Object {
            "instance": null,
            "key": "8",
            "nodeType": "host",
            "props": Object {
              "children": 8,
              "className": "score-btn",
              "onClick": [Function],
              "value": 8,
            },
            "ref": null,
            "rendered": 8,
            "type": "button",
          },
          Object {
            "instance": null,
            "key": "9",
            "nodeType": "host",
            "props": Object {
              "children": 9,
              "className": "score-btn",
              "onClick": [Function],
              "value": 9,
            },
            "ref": null,
            "rendered": 9,
            "type": "button",
          },
          Object {
            "instance": null,
            "key": "10",
            "nodeType": "host",
            "props": Object {
              "children": 10,
              "className": "score-btn",
              "onClick": [Function],
              "value": 10,
            },
            "ref": null,
            "rendered": 10,
            "type": "button",
          },
        ],
        "type": "div",
      },
      undefined,
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "frameTotal": Array [],
          "scoreArray": Array [],
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <div
            className="button-container"
          >
            <button
              className="score-btn"
              onClick={[Function]}
              value={0}
            >
              0
            </button>
            <button
              className="score-btn"
              onClick={[Function]}
              value={1}
            >
              1
            </button>
            <button
              className="score-btn"
              onClick={[Function]}
              value={2}
            >
              2
            </button>
            <button
              className="score-btn"
              onClick={[Function]}
              value={3}
            >
              3
            </button>
            <button
              className="score-btn"
              onClick={[Function]}
              value={4}
            >
              4
            </button>
            <button
              className="score-btn"
              onClick={[Function]}
              value={5}
            >
              5
            </button>
            <button
              className="score-btn"
              onClick={[Function]}
              value={6}
            >
              6
            </button>
            <button
              className="score-btn"
              onClick={[Function]}
              value={7}
            >
              7
            </button>
            <button
              className="score-btn"
              onClick={[Function]}
              value={8}
            >
              8
            </button>
            <button
              className="score-btn"
              onClick={[Function]}
              value={9}
            >
              9
            </button>
            <button
              className="score-btn"
              onClick={[Function]}
              value={10}
            >
              10
            </button>
          </div>,
          undefined,
          <ScoreBoard
            frameTotal={Array []}
            scoreArray={Array []}
          />,
        ],
        "className": "bowling-area",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <button
                className="score-btn"
                onClick={[Function]}
                value={0}
              >
                0
              </button>,
              <button
                className="score-btn"
                onClick={[Function]}
                value={1}
              >
                1
              </button>,
              <button
                className="score-btn"
                onClick={[Function]}
                value={2}
              >
                2
              </button>,
              <button
                className="score-btn"
                onClick={[Function]}
                value={3}
              >
                3
              </button>,
              <button
                className="score-btn"
                onClick={[Function]}
                value={4}
              >
                4
              </button>,
              <button
                className="score-btn"
                onClick={[Function]}
                value={5}
              >
                5
              </button>,
              <button
                className="score-btn"
                onClick={[Function]}
                value={6}
              >
                6
              </button>,
              <button
                className="score-btn"
                onClick={[Function]}
                value={7}
              >
                7
              </button>,
              <button
                className="score-btn"
                onClick={[Function]}
                value={8}
              >
                8
              </button>,
              <button
                className="score-btn"
                onClick={[Function]}
                value={9}
              >
                9
              </button>,
              <button
                className="score-btn"
                onClick={[Function]}
                value={10}
              >
                10
              </button>,
            ],
            "className": "button-container",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": "0",
              "nodeType": "host",
              "props": Object {
                "children": 0,
                "className": "score-btn",
                "onClick": [Function],
                "value": 0,
              },
              "ref": null,
              "rendered": 0,
              "type": "button",
            },
            Object {
              "instance": null,
              "key": "1",
              "nodeType": "host",
              "props": Object {
                "children": 1,
                "className": "score-btn",
                "onClick": [Function],
                "value": 1,
              },
              "ref": null,
              "rendered": 1,
              "type": "button",
            },
            Object {
              "instance": null,
              "key": "2",
              "nodeType": "host",
              "props": Object {
                "children": 2,
                "className": "score-btn",
                "onClick": [Function],
                "value": 2,
              },
              "ref": null,
              "rendered": 2,
              "type": "button",
            },
            Object {
              "instance": null,
              "key": "3",
              "nodeType": "host",
              "props": Object {
                "children": 3,
                "className": "score-btn",
                "onClick": [Function],
                "value": 3,
              },
              "ref": null,
              "rendered": 3,
              "type": "button",
            },
            Object {
              "instance": null,
              "key": "4",
              "nodeType": "host",
              "props": Object {
                "children": 4,
                "className": "score-btn",
                "onClick": [Function],
                "value": 4,
              },
              "ref": null,
              "rendered": 4,
              "type": "button",
            },
            Object {
              "instance": null,
              "key": "5",
              "nodeType": "host",
              "props": Object {
                "children": 5,
                "className": "score-btn",
                "onClick": [Function],
                "value": 5,
              },
              "ref": null,
              "rendered": 5,
              "type": "button",
            },
            Object {
              "instance": null,
              "key": "6",
              "nodeType": "host",
              "props": Object {
                "children": 6,
                "className": "score-btn",
                "onClick": [Function],
                "value": 6,
              },
              "ref": null,
              "rendered": 6,
              "type": "button",
            },
            Object {
              "instance": null,
              "key": "7",
              "nodeType": "host",
              "props": Object {
                "children": 7,
                "className": "score-btn",
                "onClick": [Function],
                "value": 7,
              },
              "ref": null,
              "rendered": 7,
              "type": "button",
            },
            Object {
              "instance": null,
              "key": "8",
              "nodeType": "host",
              "props": Object {
                "children": 8,
                "className": "score-btn",
                "onClick": [Function],
                "value": 8,
              },
              "ref": null,
              "rendered": 8,
              "type": "button",
            },
            Object {
              "instance": null,
              "key": "9",
              "nodeType": "host",
              "props": Object {
                "children": 9,
                "className": "score-btn",
                "onClick": [Function],
                "value": 9,
              },
              "ref": null,
              "rendered": 9,
              "type": "button",
            },
            Object {
              "instance": null,
              "key": "10",
              "nodeType": "host",
              "props": Object {
                "children": 10,
                "className": "score-btn",
                "onClick": [Function],
                "value": 10,
              },
              "ref": null,
              "rendered": 10,
              "type": "button",
            },
          ],
          "type": "div",
        },
        undefined,
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "frameTotal": Array [],
            "scoreArray": Array [],
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
    "disableLifecycleMethods": true,
  },
}
`;
